plugins {
    id "java"
    id "scala"
    id "com.timgroup.jarmangit"
    id "com.github.maiflai.scalatest"
    id "maven-publish"
}

group = 'com.timgroup'
if (buildNumber) version = '0.0.' + buildNumber

repositories {
    maven {
        url = "$repoUrl/groups/public"
    }
}

// https://chrismarks.wordpress.com/2013/07/31/compiling-a-mixed-scala-project-with-gradle/
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []
sourceSets.test.scala.srcDir "src/test/java"
sourceSets.test.java.srcDirs = []

dependencies {
    compile project(":api-legacy")
    compile "com.google.guava:guava:28.0-jre"
    compileOnly "org.joda:joda-convert:1.3.1"

    testImplementation project(":api-legacy:testlib")
    testImplementation project(":memory-legacy")
    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
    testImplementation "com.timgroup:clocks-testing:1.0.1095" // autobump
    testImplementation "com.timgroup:clocks-joda-testing:1.0.1095" // autobump
    testImplementation "org.scalatest:scalatest_$scalaApiVersion:3.0.1"
    testCompileOnly "org.joda:joda-convert:1.3.1"
    testRuntimeOnly "org.pegdown:pegdown:1.4.2"
}

check.dependsOn("scalatest")

tasks.withType(JavaCompile).all {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.encoding = "UTF-8"
    options.incremental = true
    options.deprecation = true
    options.compilerArgs << "-parameters"
}

tasks.withType(ScalaCompile).all {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.encoding = "UTF-8"
    options.incremental = true
    options.deprecation = true
    options.compilerArgs << "-parameters"
    scalaCompileOptions.additionalParameters = ["-target:jvm-1.8"]
}

tasks.withType(Jar).all {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'TIM Group Ltd'
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

assemble.dependsOn(sourcesJar)

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

assemble.dependsOn(javadocJar)

publishing {
    repositories {
        if (project.hasProperty("repoUrl")) {
            maven {
                url = "${project.repoUrl}/repositories/yd-release-candidates"
                credentials {
                    username = project.repoUsername
                    password = project.repoPassword
                }
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId "eventstore-stitching-legacy_${scalaApiVersion}"
            from components.java
            artifact(sourcesJar)
            artifact(javadocJar)
        }
    }
}
